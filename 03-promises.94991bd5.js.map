{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCC,YAAW,KACTJ,EAAQ,C,SAAEH,E,MAAUC,GAAQ,GAC3BA,GAEHM,YAAW,KACTH,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAZAO,SAASC,cAAc,SAiB/BC,iBAAiB,UAAWC,IACjCA,EAAMC,iBAEN,MAAMC,EAAUL,SAASC,cAAc,kBACjCK,EAASN,SAASC,cAAc,iBAChCM,EAAWP,SAASC,cAAc,mBAExC,IAAIO,EAAQC,SAASJ,EAAQK,OAC7B,MAAMC,EAAOF,SAASH,EAAOI,OACvBE,EAASH,SAASF,EAASG,OAEjC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAC1BtB,EAAcsB,EAAI,EAAGL,GAClBM,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEzEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,IAEzEe,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form')\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n};\n\nformEl.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const delayEl = document.querySelector('[name=\"delay\"]');\n  const stepEl = document.querySelector('[name=\"step\"]');\n  const amountEl = document.querySelector('[name=\"amount\"]');\n\n  let delay = parseInt(delayEl.value);\n  const step = parseInt(stepEl.value);\n  const amount = parseInt(amountEl.value);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayEl","stepEl","amountEl","delay1","parseInt","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.94991bd5.js.map"}